<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDisplayName" xml:space="preserve">
    <value>ml.Doki</value>
    <comment>Application display name</comment>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>ml.Doki</value>
    <comment>Application description</comment>
  </data>
  <data name="PivotPage_Donate.Header" xml:space="preserve">
    <value>Donate</value>
    <comment>Pivot item header for Donate</comment>
  </data>
  <data name="PivotPage_Overview.Header" xml:space="preserve">
    <value>Overview</value>
    <comment>Pivot item header for Overview</comment>
  </data>
  <data name="PivotPage_About.Header" xml:space="preserve">
    <value>About</value>
    <comment>Pivot item header for About</comment>
  </data>
  <data name="ExceptionSettingsStorageExtensionsFileNameIsNullOrEmpty" xml:space="preserve">
    <value>File name is null or empty. Specify a valid file name</value>
    <comment>File name is null or empty to save file in settings storage extensions</comment>
  </data>
  <data name="AboutPage_DevsDescription.Text" xml:space="preserve">
    <value>Developed by Gino Messmer &amp; Samuel Oechsler.  
Fork us on [GitHub](https://github.com/medialesson/doki-uwp).</value>
  </data>
  <data name="AboutPage_Licenses.Text" xml:space="preserve">
    <value>Licenses</value>
  </data>
  <data name="AboutPage_LicensesDescription.Text" xml:space="preserve">
    <value>Third-party software acknowledgements

### Humanizer
https://github.com/Humanizr/Humanizer  
Copyright &amp;copy; .NET Foundation and Contributors  
Licensed under [MIT License](https://github.com/Humanizr/Humanizer/blob/master/LICENSE)

### Inflector
https://github.com/srkirkland/Inflector  
Copyright &amp;copy; 2013 Scott Kirkland  
Licensed under [MIT License](https://github.com/srkirkland/Inflector/blob/master/LICENSE.txt)

### ByteSize
https://github.com/omar/ByteSize  
Copyright &amp;copy; 2013-2014 Omar Khudeira  
Lizensiert under [MIT License](https://github.com/omar/ByteSize/blob/master/LICENSE)

### Beer icon
Entworfen von [srip](https://www.flaticon.com/authors/srip), gefunden auf [flaticon.com](https://www.flaticon.com/)  
Lizensiert under [CC 3.0 BY](https://creativecommons.org/licenses/by/3.0/)</value>
  </data>
  <data name="ConfigurationPage_Api.Header" xml:space="preserve">
    <value>API</value>
  </data>
  <data name="ConfigurationPage_ApiAppCenterId.Header" xml:space="preserve">
    <value>App Center ID</value>
  </data>
  <data name="ConfigurationPage_Content.Header" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="ConfigurationPage_ContentAboutDescription.Header" xml:space="preserve">
    <value>About content</value>
  </data>
  <data name="ConfigurationPage_ContentCurrencyLocal.Header" xml:space="preserve">
    <value>Currency local</value>
  </data>
  <data name="ConfigurationPage_SaveDialog.Description" xml:space="preserve">
    <value>Settings have been applied.</value>
  </data>
  <data name="ConfigurationPage_SaveDialog.Title" xml:space="preserve">
    <value />
  </data>
  <data name="DonatePage_ContactImageDescription.Text" xml:space="preserve">
    <value>Choose from staff</value>
  </data>
  <data name="DonatePage_DonateConfirmationDialog.PrimaryButtonText" xml:space="preserve">
    <value>Dismiss</value>
  </data>
  <data name="DonatePage_DonateValidationDialog.Description" xml:space="preserve">
    <value>Please check all required fields and try again.</value>
  </data>
  <data name="DonatePage_DonateValidationDialog.Title" xml:space="preserve">
    <value>Your input is not valid</value>
  </data>
  <data name="DonatePage_DonationAmount.Header" xml:space="preserve">
    <value>Your pledge</value>
  </data>
  <data name="DonatePage_DonationName.Header" xml:space="preserve">
    <value>Your name</value>
  </data>
  <data name="DonatePage_DonationName.PlaceholderText" xml:space="preserve">
    <value />
  </data>
  <data name="DonatePage_OpenConfigurationsDialog.CloseButtonText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="DonatePage_OpenConfigurationsDialog.PrimaryButtonText" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="DonatePage_SettingsMenuFlyoutItem.Text" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="DonationConfirmationPage_Description.Text" xml:space="preserve">
    <value>Stay awesome</value>
  </data>
  <data name="DonationConfirmationPage_Title.Text" xml:space="preserve">
    <value>Thank you for your donation</value>
  </data>
  <data name="DonatorDetailPage_SupportType.Text" xml:space="preserve">
    <value>lifetime support</value>
  </data>
  <data name="OverviewPage_RefreshButton.Label" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="OverviewPage_SelectDonatorDialog.PrimaryButtonText" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="DonatePage_AverageAmountButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Donate the average</value>
  </data>
  <data name="DonatorItemTemplates_RewardMvp.ToolTipService.ToolTip" xml:space="preserve">
    <value>MVP</value>
  </data>
  <data name="DonatorItemTemplates_RewardTrending.ToolTipService.ToolTip" xml:space="preserve">
    <value>Trending</value>
  </data>
  <data name="DonatePage_CommitException.Content" xml:space="preserve">
    <value>An error occured while committing your donation. Please try again or reach out to your system administrator for further assistance.</value>
  </data>
  <data name="OverviewPage_FetchException.Content" xml:space="preserve">
    <value>Unable to fetch all donations. Please contact the administrator for assistance.</value>
  </data>
  <data name="ConfigurationPage_ContentAboutDescription.PlaceholderText" xml:space="preserve">
    <value>## Where the money will be going

- Enter a set of reasons that describe your cause
- This text field can be styled with Markdown</value>
  </data>
  <data name="ConfigurationPage_ApiGetEndpoint.Header" xml:space="preserve">
    <value>List Remote Endpoint</value>
  </data>
  <data name="ConfigurationPage_ApiPostEndpoint.Header" xml:space="preserve">
    <value>Store Remote Endpoint</value>
  </data>
  <data name="AppVersionFormat" xml:space="preserve">
    <value>{0}.{1} Build {2}</value>
  </data>
  <data name="ConfigurationPage_ApiCheckbox.Content" xml:space="preserve">
    <value>Enable API</value>
  </data>
</root>